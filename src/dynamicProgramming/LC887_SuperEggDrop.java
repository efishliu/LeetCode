package dynamicProgramming;
/*
    题目：鸡蛋掉落
    难度：hard
    给你 k 枚相同的鸡蛋，并可以使用一栋从第 1 层到第 n 层共有 n 层楼的建筑。
    已知存在楼层 f ，满足0 <= f <= n ，任何从 高于 f 的楼层落下的鸡蛋都会碎，
    从 f 楼层或比它低的楼层落下的鸡蛋都不会破。
    每次操作，你可以取一枚没有碎的鸡蛋并把它从任一楼层 x 扔下（满足1 <= x <= n）。
    如果鸡蛋碎了，你就不能再次使用它。如果某枚鸡蛋扔下后没有摔碎，则可以在之后的操作中 重复使用 这枚鸡蛋。
    请你计算并返回要确定 f 确切的值 的 最小操作次数 是多少？
    链接：https://leetcode-cn.com/problems/super-egg-drop
 */
/*
    动态规划问题：
    1.确定状态：K枚鸡蛋，N层建筑，故dp为二维dp[][]
    2.dp[i][j]含义为有i个鸡蛋时，测试j层建筑最坏情况所需的最小操作次数
    3.状态转移：dp[i][j] = max(dp[i][n-j],dp[i-1][j-1]) //摔破[i][n-j],没摔破[i-1][j-1]
    4.初始状态dp[1][j]=j;dp[i][0]=0;
    待解决
 */
public class LC887_SuperEggDrop {
}
